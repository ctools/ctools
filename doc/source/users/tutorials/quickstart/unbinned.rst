.. _start_unbinned:

Doing an unbinned analysis
--------------------------

  .. admonition:: What you will learn

     You will learn how to **adjust a parametrised model to the events without
     binning the data**.

     Gamma-ray events are rare, hence the counts cubes generated by
     :ref:`ctbin` may be sparsly populated, having many empty pixels, in
     particular at high energies. In that case it may be worth to
     analyse the events directly with an unbinned maximum likelihood
     analysis.

     An unbinned analysis is generally preferred over a binned analysis for
     short observation times (a few tens of hours) or if you want to assure
     that the analysis results are not biased by the selected binning.

An alternative analysis technique consists of working directly on the event
list without binning the events in a counts cube.
You do this with the :ref:`ctlike` tool as follows:

.. code-block:: bash

   $ ctlike
   Input event list, counts cube or observation definition XML file [cntcube.fits] selected_events.fits
   Calibration database [prod2]
   Instrument response function [South_0.5h]
   Input model definition XML file [models.xml] $CTOOLS/share/models/crab.xml
   Output model definition XML file [crab_results.xml]

You will recognise that :ref:`ctlike` runs much faster in unbinned mode
compared to binned mode.
This is understandable as the selected event list contains
only 20877 events, while the binned counts cube you used before had
200 x 200 x 20 = 800000 bins. As unbinned maximum likelihood fitting loops
over the events (while binned maximum likelihood loops over the bins),
there are much less operations to perform in unbinned than in binned mode
(there is some additional overhead in unbinned mode that comes from
integrating the models over the region of interest, yet this is negligible
compared to the operations needed when looping over all pixels). So as long
as you work with small event lists, unbinned mode is faster (this
typically holds up to few tens of hours of observing time).
Unbinned :ref:`ctlike` should also be more precise as no binning is performed,
hence there is no loss of information due to histogramming.

Below you see the corresponding output from the ``ctlike.log`` file. The fitted
parameters are essentially identical to the ones found in binned mode.
The slight difference with respect to the binned analysis may be explained
by the different event sample that were used for the analysis: while
binned likelihood works on rectangular counts cubes, unbinned likelihood works
on circular event selection regions. It is thus not possible to select exactly
the same events for both analyses.

.. code-block:: none

   2018-01-24T14:42:49: +=========================================+
   2018-01-24T14:42:49: | Maximum likelihood optimisation results |
   2018-01-24T14:42:49: +=========================================+
   2018-01-24T14:42:49: === GOptimizerLM ===
   2018-01-24T14:42:49:  Optimized function value ..: 139993.152
   2018-01-24T14:42:49:  Absolute precision ........: 0.005
   2018-01-24T14:42:49:  Acceptable value decrease .: 2
   2018-01-24T14:42:49:  Optimization status .......: converged
   2018-01-24T14:42:49:  Number of parameters ......: 10
   2018-01-24T14:42:49:  Number of free parameters .: 4
   2018-01-24T14:42:49:  Number of iterations ......: 2
   2018-01-24T14:42:49:  Lambda ....................: 1e-05
   2018-01-24T14:42:49:  Maximum log likelihood ....: -139993.152
   2018-01-24T14:42:49:  Observed events  (Nobs) ...: 21974.000
   2018-01-24T14:42:49:  Predicted events (Npred) ..: 21973.998 (Nobs - Npred = 0.00192004605924012)
   2018-01-24T14:42:49: === GModels ===
   2018-01-24T14:42:49:  Number of models ..........: 2
   2018-01-24T14:42:49:  Number of parameters ......: 10
   2018-01-24T14:42:49: === GModelSky ===
   2018-01-24T14:42:49:  Name ......................: Crab
   2018-01-24T14:42:49:  Instruments ...............: all
   2018-01-24T14:42:49:  Instrument scale factors ..: unity
   2018-01-24T14:42:49:  Observation identifiers ...: all
   2018-01-24T14:42:49:  Model type ................: PointSource
   2018-01-24T14:42:49:  Model components ..........: "PointSource" * "PowerLaw" * "Constant"
   2018-01-24T14:42:49:  Number of parameters ......: 6
   2018-01-24T14:42:49:  Number of spatial par's ...: 2
   2018-01-24T14:42:49:   RA .......................: 83.6331 [-360,360] deg (fixed,scale=1)
   2018-01-24T14:42:49:   DEC ......................: 22.0145 [-90,90] deg (fixed,scale=1)
   2018-01-24T14:42:49:  Number of spectral par's ..: 3
   2018-01-24T14:42:49:   Prefactor ................: 5.84749807744844e-16 +/- 1.02060247557839e-17 [1e-23,1e-13] ph/cm2/s/MeV (free,scale=1e-16,gradient)
   2018-01-24T14:42:49:   Index ....................: -2.48831941472059 +/- 0.0150002799717933 [-0,-5]  (free,scale=-1,gradient)
   2018-01-24T14:42:49:   PivotEnergy ..............: 300000 [10000,1000000000] MeV (fixed,scale=1000000,gradient)
   2018-01-24T14:42:49:  Number of temporal par's ..: 1
   2018-01-24T14:42:49:   Normalization ............: 1 (relative value) (fixed,scale=1,gradient)
   2018-01-24T14:42:49: === GCTAModelIrfBackground ===
   2018-01-24T14:42:49:  Name ......................: CTABackgroundModel
   2018-01-24T14:42:49:  Instruments ...............: CTA
   2018-01-24T14:42:49:  Instrument scale factors ..: unity
   2018-01-24T14:42:49:  Observation identifiers ...: all
   2018-01-24T14:42:49:  Model type ................: "PowerLaw" * "Constant"
   2018-01-24T14:42:49:  Number of parameters ......: 4
   2018-01-24T14:42:49:  Number of spectral par's ..: 3
   2018-01-24T14:42:49:   Prefactor ................: 1.00311308345777 +/- 0.0134769768119516 [0.001,1000] ph/cm2/s/MeV (free,scale=1,gradient)
   2018-01-24T14:42:49:   Index ....................: 0.00710999567642649 +/- 0.00818686036300859 [-5,5]  (free,scale=1,gradient)
   2018-01-24T14:42:49:   PivotEnergy ..............: 1000000 [10000,1000000000] MeV (fixed,scale=1000000,gradient)
   2018-01-24T14:42:49:  Number of temporal par's ..: 1
   2018-01-24T14:42:49:   Normalization ............: 1 (relative value) (fixed,scale=1,gradient)

.. note::
   Many tools or scripts can also be used in unbinned mode, including
   :ref:`csresmap`, :ref:`ctbutterfly` and :ref:`csspec` that were used
   earlier. It is sufficient to replace the input counts cube by an event
   list to activate unbinned mode for these tools.
